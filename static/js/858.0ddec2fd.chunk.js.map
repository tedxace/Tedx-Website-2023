{"version":3,"file":"static/js/858.0ddec2fd.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/on-next-frame.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/node/id.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/render/utils/types.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/animation/utils/easing.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","../node_modules/framer-motion/dist/es/animation/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/waapi/supports.mjs","../node_modules/framer-motion/dist/es/animation/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/create-instant-animation.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/index.mjs","../node_modules/framer-motion/dist/es/render/utils/animation.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/animate.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs"],"sourcesContent":["import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n};\n\nexport { frameData };\n","/*\n  Detect and load appropriate clock setting for the execution environment\n */\nconst defaultTimestep = (1 / 60) * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\"\n    ? () => performance.now()\n    : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\"\n    ? (callback) => window.requestAnimationFrame(callback)\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\n\nexport { defaultTimestep, onNextFrame };\n","import { onNextFrame, defaultTimestep } from './on-next-frame.mjs';\nimport { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext, useContext } from 'react';\n\nconst MotionContext = createContext({});\nfunction useVisualElementContext() {\n    return useContext(MotionContext).visualElement;\n}\n\nexport { MotionContext, useVisualElementContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useVisualElementContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const parent = useVisualElementContext();\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\n\nconst variantProps = [\n    \"initial\",\n    \"animate\",\n    \"exit\",\n    \"whileHover\",\n    \"whileDrag\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileInView\",\n];\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n        \"whileInView\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Returns true if the provided key is a CSS variable\n */\nfunction isCSSVariable(key) {\n    return key.startsWith(\"--\");\n}\n\nexport { isCSSVariable };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariable } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariable(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","var AnimationType;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"InView\"] = \"whileInView\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(AnimationType || (AnimationType = {}));\n\nexport { AnimationType };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(AnimationType.Hover, isActive);\n        }\n        if (props[callbackName]) {\n            props[callbackName](event, info);\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(AnimationType.Focus, true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(AnimationType.Focus, false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const noop = (any) => any;\n\nexport { noop };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel && onTapCancel(endEvent, endInfo)\n                    : onTap && onTap(endEvent, endInfo);\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", this.node.getProps().onTap);\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(AnimationType.Tap, true);\n        }\n        onTapStart && onTapStart(event, info);\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(AnimationType.Tap, false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        onTapCancel && onTapCancel(event, info);\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { AnimationType } from '../../../render/utils/types.mjs';\nimport { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    /**\n     * TODO: Remove this in 10.0\n     */\n    viewportFallback() {\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         */\n        requestAnimationFrame(() => {\n            this.hasEnteredView = true;\n            const { onViewportEnter } = this.node.getProps();\n            onViewportEnter && onViewportEnter(null);\n            if (this.node.animationState) {\n                this.node.animationState.setActive(AnimationType.InView, true);\n            }\n        });\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once, fallback = true, } = viewport;\n        if (typeof IntersectionObserver === \"undefined\") {\n            if (fallback)\n                this.viewportFallback();\n            return;\n        }\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(AnimationType.InView, isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"9.0.4\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                sync.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve) || null;\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        this.animation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from 'hey-listen';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from 'hey-listen';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    const numValues = values.length;\n    return values.map((_value, i) => i !== 0 ? i / (numValues - 1) : 0);\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\nfunction keyframes({ keyframes: keyframeValues, ease = easeInOut, times, duration = 300, }) {\n    keyframeValues = [...keyframeValues];\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    function createInterpolator() {\n        return interpolate(absoluteTimes, keyframeValues, {\n            ease: Array.isArray(easingFunctions)\n                ? easingFunctions\n                : defaultEasing(keyframeValues, easingFunctions),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            keyframeValues.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };\n","import { warning } from 'hey-listen';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nconst velocitySampleDuration = 5;\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    let origin = keyframes[0];\n    let target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    function createSpring() {\n        const initialDelta = target - origin;\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working on a granular scale, use smaller defaults for determining\n         * when the spring is finished.\n         *\n         * These defaults have been selected emprically based on what strikes a good\n         * ratio between feeling good and finishing as soon as changes are imperceptible.\n         */\n        const isGranularScale = Math.abs(initialDelta) < 5;\n        restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n        restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (target -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => target -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (target -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        const prevT = Math.max(0, t - velocitySampleDuration);\n                        currentVelocity = velocityPerSecond(current - resolveSpring(prevT), t - prevT);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        flipTarget: () => {\n            initialVelocity = -initialVelocity;\n            [origin, target] = [target, origin];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = {\n    decay,\n    keyframes: keyframes,\n    tween: keyframes,\n    spring,\n};\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animate({ duration, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, keyframes: keyframes$1, autoplay = true, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    const initialElapsed = elapsed;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = duration;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[keyframes$1.length > 2 ? \"keyframes\" : type] || keyframes;\n    const origin = keyframes$1[0];\n    const target = keyframes$1[keyframes$1.length - 1];\n    let state = { done: false, value: origin };\n    /**\n     * If this value needs interpolation (ie is non-numerical), set up an interpolator.\n     * TODO: Keyframes animation also performs this step. This could be removed so it only happens here.\n     */\n    const { needsInterpolation } = animator;\n    if (needsInterpolation && needsInterpolation(origin, target)) {\n        interpolateFromNumber = interpolate([0, 100], [origin, target], {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const animation = animator({\n        ...options,\n        duration,\n        keyframes: keyframes$1,\n    });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls && driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            state = animation.next(Math.max(0, elapsed));\n            if (interpolateFromNumber)\n                state.value = interpolateFromNumber(state.value);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate && onUpdate(state.value);\n        if (isComplete) {\n            if (repeatCount === 0) {\n                computedDuration =\n                    computedDuration !== undefined ? computedDuration : elapsed;\n            }\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay && onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop && onStop();\n            driverControls && driverControls.stop();\n        },\n        /**\n         * Set the current time of the animation. This is purposefully\n         * mirroring the WAAPI animation API to make them interchanagable.\n         * Going forward this file should be ported more towards\n         * https://github.com/motiondivision/motionone/blob/main/packages/animation/src/Animation.ts\n         * Which behaviourally adheres to WAAPI as far as possible.\n         *\n         * WARNING: This is not safe to use for most animations. We currently\n         * only use it for handoff from WAAPI within Framer.\n         *\n         * This animation function consumes time every frame rather than being sampled for time.\n         * So the sample() method performs some headless frames to ensure\n         * repeats are handled correctly. Ideally in the future we will replace\n         * that method with this, once repeat calculations are pure.\n         */\n        set currentTime(t) {\n            elapsed = initialElapsed;\n            update(t);\n        },\n        /**\n         * animate() can't yet be sampled for time, instead it\n         * consumes time. So to sample it we have to run a low\n         * temporal-resolution version.\n         */\n        sample: (t) => {\n            elapsed = initialElapsed;\n            const sampleResolution = duration && typeof duration === \"number\"\n                ? Math.max(duration * 0.5, 50)\n                : 50;\n            let sampleElapsed = 0;\n            update(0);\n            while (sampleElapsed <= t) {\n                const remaining = t - sampleElapsed;\n                update(Math.min(remaining, sampleResolution));\n                sampleElapsed += sampleResolution;\n            }\n            return state;\n        },\n    };\n}\n\nexport { animate, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","function decay({ \n/**\n * The decay animation dynamically calculates an end of the animation\n * based on the initial keyframe, so we only need to define a single keyframe\n * as default.\n */\nkeyframes = [0], velocity = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    const origin = keyframes[0];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { sync } from '../../frameloop/index.mjs';\nimport { animate } from '../legacy-popmotion/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\"opacity\"]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0;\n    if (!canAccelerateAnimation)\n        return false;\n    let { keyframes, duration = 300, elapsed = 0, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (options.type === \"spring\" || !isWaapiSupportedEasing(options.ease)) {\n        /**\n         * If we need to pre-generate keyframes and repeat is infinite then\n         * early return as this will lock the thread.\n         */\n        if (options.repeat === Infinity)\n            return;\n        const sampleAnimation = animate({ ...options, elapsed: 0 });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < 20000) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        delay: -elapsed,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        sync.update(() => animation.cancel());\n        onComplete && onComplete();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        get currentTime() {\n            return animation.currentTime || 0;\n        },\n        set currentTime(t) {\n            animation.currentTime = t;\n        },\n        stop: () => {\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animate({ ...options, autoplay: false });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            sync.update(() => animation.cancel());\n        },\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    return element.animate({ [valueName]: keyframes, offset: times }, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","import { delay } from '../utils/delay.mjs';\n\nfunction createInstantAnimation({ keyframes, elapsed, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n    };\n    return elapsed ? { stop: delay(setValue, -elapsed) } : setValue();\n}\n\nexport { createInstantAnimation };\n","import { animate } from './index.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nfunction inertia({ keyframes, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    const origin = keyframes[0];\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function findNearestBoundary(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation && currentAnimation.stop();\n        currentAnimation = animate({\n            keyframes: [0, 1],\n            velocity: 0,\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                onUpdate && onUpdate(v);\n                options.onUpdate && options.onUpdate(v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(origin)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({\n            velocity,\n            keyframes: [origin, findNearestBoundary(origin)],\n        });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + origin;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = findNearestBoundary(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, frameData.delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ keyframes: [v, boundary], velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            keyframes: [origin, 0],\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation && currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","const underDampedSpring = () => ({\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n});\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst linearTween = () => ({\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\nconst defaultTransitions = {\n    x: underDampedSpring,\n    y: underDampedSpring,\n    z: underDampedSpring,\n    rotate: underDampedSpring,\n    rotateX: underDampedSpring,\n    rotateY: underDampedSpring,\n    rotateZ: underDampedSpring,\n    scaleX: criticallyDampedSpring,\n    scaleY: criticallyDampedSpring,\n    scale: criticallyDampedSpring,\n    opacity: linearTween,\n    backgroundColor: linearTween,\n    color: linearTween,\n    default: criticallyDampedSpring,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else {\n        const factory = defaultTransitions[valueKey] || defaultTransitions.default;\n        return factory(keyframes[1]);\n    }\n};\n\nexport { criticallyDampedSpring, getDefaultTransition, linearTween, underDampedSpring };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { warning } from 'hey-listen';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from './waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from './create-instant-animation.mjs';\nimport { animate } from './legacy-popmotion/index.mjs';\nimport { inertia } from './legacy-popmotion/inertia.mjs';\nimport { getDefaultTransition } from './utils/default-transitions.mjs';\nimport { isAnimatable } from './utils/is-animatable.mjs';\nimport { getKeyframes } from './utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from './utils/transitions.mjs';\n\nconst createMotionValueAnimation = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        else if (valueTransition.type === \"inertia\") {\n            /**\n             * If this is an inertia animation, we currently don't support pre-generating\n             * keyframes for this as such it must always run on the main thread.\n             */\n            return inertia(options);\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animate(options);\n    };\n};\n\nexport { createMotionValueAnimation };\n","import { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, sync);\n            }\n        }\n        let animation = value.start(createMotionValueAnimation(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { AnimationType } from './types.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\nconst variantPriorityOrder = [\n    AnimationType.Animate,\n    AnimationType.InView,\n    AnimationType.Focus,\n    AnimationType.Hover,\n    AnimationType.Tap,\n    AnimationType.Drag,\n    AnimationType.Exit,\n];\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                child.animationState &&\n                    child.animationState.setActive(type, isActive);\n            });\n        }\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        [AnimationType.Animate]: createTypeState(true),\n        [AnimationType.InView]: createTypeState(),\n        [AnimationType.Hover]: createTypeState(),\n        [AnimationType.Tap]: createTypeState(),\n        [AnimationType.Drag]: createTypeState(),\n        [AnimationType.Focus]: createTypeState(),\n        [AnimationType.Exit]: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState, variantPriorityOrder };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { AnimationType } from '../../../render/utils/types.mjs';\nimport { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(AnimationType.Exit, !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from 'hey-listen';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart && onDragStart(event, info);\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(AnimationType.Drag, true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd && onDragEnd(event, info);\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(AnimationType.Drag, false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(createMotionValueAnimation(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: onPanSessionStart,\n            onStart: onPanStart,\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                onPanEnd && onPanEnd(event, info);\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { invariant } from 'hey-listen';\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            this.isTransformDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this or any\n             * child might need recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        /**\n         *\n         */\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.isProjectionDirty = true;\n            this.root.scheduleUpdateProjection();\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            if (!this.isProjectionDirty && !this.attemptToResolveRelativeTarget)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if ((this.parent.relativeTarget ||\n                this.parent.targetDelta ||\n                this.parent.options.layoutRoot) &&\n                this.parent.layout) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        calcProjection() {\n            const { isProjectionDirty, isTransformDirty } = this;\n            this.isProjectionDirty = this.isTransformDirty = false;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            if (isProjectionDirty)\n                canSkip = false;\n            if (isShared && isTransformDirty)\n                canSkip = false;\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Propagate isProjectionDirty. Nodes are ordered by depth, so if the parent here\n     * is dirty we can simply pass this forward.\n     */\n    node.isProjectionDirty || (node.isProjectionDirty = Boolean(node.parent && node.parent.isProjectionDirty));\n    /**\n     * Propagate isTransformDirty.\n     */\n    node.isTransformDirty || (node.isTransformDirty = Boolean(node.parent && node.parent.isTransformDirty));\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createMotionValueAnimation } from './index.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    value.start(createMotionValueAnimation(\"\", value, to, transition));\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from 'hey-listen';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { BoundingBoxDimension, positionalValues, unitConversion };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { warning, invariant } from 'hey-listen';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { variantPriorityOrder } from './utils/animation-state.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update(this.props, this.prevProps);\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\nconst variantProps = [\"initial\", ...variantPriorityOrder];\nconst numVariantProps = variantProps.length;\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"9.0.4\", `Attempting to mix Framer Motion versions ${nextValue.version} with 9.0.4 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariable(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_superPropBase","object","property","prototype","hasOwnProperty","call","getPrototypeOf","_get","Reflect","get","bind","target","receiver","base","desc","getOwnPropertyDescriptor","arguments","length","apply","this","_objectWithoutPropertiesLoose","source","excluded","i","sourceKeys","keys","indexOf","LayoutGroupContext","createContext","PresenceContext","frameData","delta","timestamp","defaultTimestep","getCurrentTime","performance","now","Date","onNextFrame","window","callback","requestAnimationFrame","setTimeout","useDefaultElapsed","runNextFrame","isProcessing","stepsOrder","steps","reduce","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","addToCurrentFrame","buffer","add","push","cancel","index","splice","delete","process","has","createRenderStep","sync","keepAlive","immediate","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","Math","max","min","forEach","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","_objectSpread2","getOwnPropertyDescriptors","defineProperties","MotionConfigContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","LazyContext","strict","useVisualElement","Component","visualState","props","createVisualElement","parent","useContext","visualElement","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","initial","useInsertionEffect","update","useIsomorphicLayoutEffect","render","useEffect","updateFeatures","HandoffAppearAnimations","animationState","animateChanges","isRefObject","ref","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantProps","isControllingVariants","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","context","undefined","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","id","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","useRender","useVisualState","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","projectionId","useConstant","isBrowser","initialLayoutGroupConfig","isStrict","React","Provider","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","_target","set","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","isCSSVariable","getValueAsType","type","transform","clamp","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","filterProps","isDom","forwardMotionProps","filteredProps","values","_objectWithoutProperties","objectWithoutPropertiesLoose","sourceSymbolKeys","propertyIsEnumerable","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","children","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","AnimationType","addPointerEvent","addPointerInfo","combineFunctions","a","b","pipe","transformers","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","Hover","HoverGesture","FocusGesture","isFocusVisible","matches","Focus","onFocus","onBlur","isNodeOrChild","child","parentElement","noop","any","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","Tap","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","onViewportEnter","InView","viewport","rootMargin","amount","once","fallback","threshold","isIntersecting","onViewportLeave","viewportFallback","startObserver","hasOptionsChanged","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","isZeroValueString","addUniqueItem","arr","item","removeItem","SubscriptionManager","subscriptions","c","numSubscriptions","velocityPerSecond","velocity","frameDuration","isFloat","isNaN","MotionValue","init","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","owner","subscription","on","unsubscribe","getSize","stop","eventManagers","clear","passiveEffect","stopPassiveEffect","startAnimation","Promise","resolve","animationStart","then","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","map","numbers","tokenised","createTransformer","numValues","output","convertNumbersToZero","complex","_b","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","testValueType","dimensionValueTypes","findDimensionValueType","find","valueTypes","findValueType","resolveVariant","getCurrent","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","from","isWillChangeMotionValue","optimizedAppearDataAttribute","secondsToMilliseconds","seconds","instantAnimationState","mirrorEasing","easing","reverseEasing","easeIn","easeOut","easeInOut","to","progress","hueToRgb","q","t","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","ease","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","circIn","sin","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","pow","easingDefinitionToFunction","keyframes","keyframeValues","times","duration","easingFunctions","isEasingArray","done","absoluteTimes","o","convertOffsetToTimes","_value","defaultOffset","createInterpolator","flipTarget","safeMin","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","f","initialGuess","result","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","restDelta","restSpeed","springOptions","isResolvedFromDuration","derived","getSpringOptions","resolveSpring","zero","initialVelocity","createSpring","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","prevT","isBelowVelocityThreshold","isBelowDisplacementThreshold","needsInterpolation","_t","types","decay","power","timeConstant","modifyTarget","amplitude","ideal","tween","loopElapsed","elapsed","delay","framesync","passTimestamp","driverControls","interpolateFromNumber","driver","repeat","repeatMax","repeatType","repeatDelay","keyframes$1","autoplay","onPlay","onStop","onComplete","onRepeat","onUpdate","initialElapsed","repeatCount","computedDuration","isComplete","isForwardPlayback","animator","reverseElapsed","hasRepeatDelayElapsed","currentTime","sample","sampleResolution","sampleElapsed","remaining","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","featureTests","waapi","Element","results","supports","acceleratedValues","createAcceleratedAnimation","valueName","Infinity","sampleAnimation","pregeneratedKeyframes","iterations","direction","animateStyle","onfinish","getFinalKeyframe","setWithVelocity","timeout","checkElapsed","createInstantAnimation","setValue","inertia","currentAnimation","bounceStiffness","bounceDamping","isOutOfBounds","findNearestBoundary","startSpring","boundary","heading","underDampedSpring","criticallyDampedSpring","linearTween","keyframesTransition","defaultTransitions","getDefaultTransition","valueKey","isAnimatable","isTransitionDefined","when","delayChildren","staggerChildren","staggerDirection","isZero","getZeroUnit","potentialUnitType","getValueTransition","getKeyframes","isTargetAnimatable","createMotionValueAnimation","valueTransition","originKeyframe","targetKeyframe","isOriginAnimatable","HTMLElement","acceleratedAnimation","animateVariant","variant","transitionOverride","getAnimation","animateTarget","getChildAnimations","variantChildren","forwardDelay","animateChildren","first","last","willChange","animations","animationTypeState","getState","shouldBlockAnimation","appearId","shouldReduceMotion","remove","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","sortNodePosition","protectedKeys","needsAnimating","shouldBlock","variantPriorityOrder","Animate","Drag","Exit","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","createState","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","distance2D","xDelta","yDelta","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","panSession","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","boxProgress","latest","sourceLength","targetLength","updateScroll","updateLayout","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","lockThreshold","DragGesture","removeGroupControls","controls","dragControls","addListeners","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","pixelsToPercent","pixels","correctBorderRadius","correct","cssVariableRegex","parseCSSVariable","exec","getVariableValue","depth","token","getComputedStyle","getPropertyValue","resolveCSSVariables","TypeError","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","correctors","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","isLead","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","animationId","isTreeAnimating","isTransformDirty","isProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","subscriptionManager","args","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundBox","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","getLead","attemptToResolveRelativeTarget","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","applyTransform","isShared","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","snapshotSource","layoutSource","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","isAnimating","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","corrected","num","hasListeners","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","mixAxis","searchNode","querySelector","roundAxis","BoundingBoxDimension","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","ProjectionNode","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","jump","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","scrollY","pageYOffset","convertedTarget","scrollTo","checkAndConvertChangedValueTypes","prefersReducedMotion","hasReducedMotionListener","featureNames","numFeatures","propEventHandlers","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","startAtParent","numVariantProps","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","parseDomVariant","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","createDomMotionConfig","useLayoutEffect"],"sourceRoot":""}