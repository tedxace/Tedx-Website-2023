{"version":3,"file":"static/js/338.0094e932.chunk.js","mappings":"+NA4CA,EA1CsB,SAAH,GAAqB,IACtC,EAD8B,EAAPA,QAErBC,QAAWC,EAAK,EAALA,MAAOC,EAAI,EAAJA,KAAMC,EAAQ,EAARA,SAAUC,EAAI,EAAJA,KAAMC,EAAI,EAAJA,KAE1C,OACE,qBAASC,UAAU,6FAA4F,WAC7G,gBAAKA,UAAU,0BAAyB,UACtC,gBACEC,IAAKN,EACLO,IAAKN,EACLI,UAAU,wEAGd,iBAAKA,UAAU,4CAA2C,WACxD,4BACE,eAAIA,UAAU,sFAAqF,SAChGJ,KAEH,cAAGI,UAAU,uFAAsF,SAChGH,OAGA,OAAJC,QAAI,IAAJA,OAAI,EAAJA,EAAMK,KAAI,SAACC,EAAMC,GAChB,OACE,cAEEL,UAAU,qDAAoD,SAE7DI,GAHIC,EAMX,KACA,eAAIL,UAAU,wEAAuE,SAC9E,OAAJD,QAAI,IAAJA,OAAI,EAAJA,EAAMI,KAAI,SAACG,EAAUD,GACpB,OAAO,wBAAiBC,GAARD,EAClB,WAKV,ECpCME,EAAgB,CACpBC,OAAQ,CACNC,EAAG,SACHC,QAAS,GAEXC,QAAS,CACPF,EAAG,IACHC,QAAS,EACTE,WAAY,CACVC,SAAU,GACVC,KAAM,SACNC,QAAS,GACTC,UAAW,MAGfC,KAAM,CACJR,EAAG,QACHC,QAAS,IAmCb,EA/Bc,SAAH,GAAkC,IAA5BjB,EAAO,EAAPA,QAASyB,EAAW,EAAXA,YACxB,OACE,SAACC,EAAA,UAAc,CACbnB,UAAU,qGACVoB,QAASF,EACTG,QAAS,CAAEX,QAAS,GACpBY,QAAS,CAAEZ,QAAS,GACpBO,KAAM,CAAEP,QAAS,GAAI,UAErB,UAACS,EAAA,UAAc,CACbnB,UAAU,0HACVoB,QAAS,SAACG,GAAC,OAAKA,EAAEC,iBAAiB,EACnCC,SAAUlB,EACVc,QAAQ,SACRC,QAAQ,UACRL,KAAK,OAAM,WAEX,SAAC,EAAa,CAACxB,QAASA,KACxB,SAAC0B,EAAA,SAAa,CACZO,WAAY,CAAEC,MAAO,KACrBC,SAAU,CAAED,MAAO,IACnBP,QAASF,EACTlB,UAAU,yBAAwB,UAElC,SAAC,IAAe,CAACA,UAAU,UAAU6B,KAAMC,EAAAA,YAKrD,EC6CA,EAhGuB,SAAH,GAAsB,IAAhBC,EAAQ,EAARA,SACxB,GAAkCC,EAAAA,EAAAA,WAAS,GAAM,eAA1CC,EAAS,KAAEC,EAAY,KAC9B,GAA8BF,EAAAA,EAAAA,WAAS,GAAM,eAAtCG,EAAO,KAAEC,EAAU,KAC1B,GAA4CJ,EAAAA,EAAAA,UAAS,CAAC,GAAE,eAAjDK,EAAc,KAAEC,EAAiB,KAClCC,EAAQ,WACZL,GAAa,EACf,EASA,OALAM,EAAAA,EAAAA,YAAU,YACI,OAART,QAAQ,IAARA,OAAQ,EAARA,EAAUU,QAAS,GACrBL,GAAW,EAEf,GAAG,CAAS,OAARL,QAAQ,IAARA,OAAQ,EAARA,EAAUU,UAEZ,qBAASzC,UAAU,WAAU,WAC3B,mBAAQ0C,GAAG,WAAW1C,UAAS,WAAMmC,EAAU,SAAW,IAAK,UAC7D,eACEnC,UAAS,yCACPmC,EACI,qBACA,6CACH,SAEFA,EAAU,QAAU,gBAGzB,oBACEnC,UAAS,2EAA6E,SAE7E,OAAR+B,QAAQ,IAARA,OAAQ,EAARA,EAAU5B,KAAI,SAACT,GACd,IAAQE,EAAkCF,EAAlCE,KAAMD,EAA4BD,EAA5BC,MAAOE,EAAqBH,EAArBG,SAAU8C,EAAWjD,EAAXiD,OAC/B,OACE,UAACxB,EAAA,UAAc,CACbO,WAAY,CAAEC,MAAO,MACrBiB,MAAO,CAAEjB,MAAO,KAEhB3B,UAAS,iJACPmC,EAAU,aAAe,MAAK,wOAEhCf,QAAS,SAACyB,GACRA,EAAMrB,kBACNS,EAAYM,IAnCxBL,GAAa,GAoCDI,EAAkB,CAAE5C,QAAAA,GACtB,EAAE,WAEF,gBACEoD,QAAQ,OACR7C,IAAKN,EACLO,IAAKN,EACLI,UAAS,qHACPmC,EAAU,eAAiB,mBAG/B,eAAInC,UAAU,yHAAwH,SACnIJ,IAEFuC,GACC,SAAChB,EAAA,IAAQ,CACP4B,KAAMJ,EAAO,GACb3C,UAAS,gEACTgD,IAAI,aACJC,OAAQ,SACRvB,WAAY,CAAEC,MAAO,MAAO,UAE5B,SAAC,IAAe,CACd3B,UAAU,mDACV6B,KAAMc,EAAO,OAGf,MACJ,eACE3C,UAAS,2GACPmC,EAAU,MAAQ,MAAK,KACrB,SAEHtC,MAxCED,EA4CX,OAEF,4BACGuC,EAAU,MACT,SAACe,EAAA,EAAe,CAAC7B,SAAS,EAAO8B,KAAK,OAAM,SACzClB,IACC,SAAC,EAAK,CAACxC,QAAS4C,EAAgBnB,YAAaqB,UAO3D,C,6GChGA,SAASa,IACL,IAAMC,GAAYC,EAAAA,EAAAA,SAAO,GAOzB,OANAC,EAAAA,EAAAA,IAA0B,WAEtB,OADAF,EAAUG,SAAU,EACb,WACHH,EAAUG,SAAU,CACxB,CACJ,GAAG,IACIH,CACX,C,wECLMI,EAAe,qGAkBhB,OAlBgB,+CACjB,SAAwBC,GACpB,IAAMC,EAAUC,KAAKC,MAAMC,SAASN,QACpC,GAAIG,GAAWD,EAAUK,YAAcH,KAAKC,MAAME,UAAW,CACzD,IAAMC,EAAOJ,KAAKC,MAAMI,QAAQT,QAChCQ,EAAKE,OAASP,EAAQQ,cAAgB,EACtCH,EAAKI,MAAQT,EAAQU,aAAe,EACpCL,EAAKM,IAAMX,EAAQY,UACnBP,EAAKQ,KAAOb,EAAQc,UACxB,CACA,OAAO,IACX,GACA,gCAGA,WAAuB,GAAC,oBACxB,WACI,OAAOb,KAAKC,MAAMa,QACtB,KAAC,EAlBgB,CAASC,EAAAA,WAoB9B,SAASC,EAAS,GAAyB,IAAvBF,EAAQ,EAARA,SAAUX,EAAS,EAATA,UACpBrB,GAAKmC,EAAAA,EAAAA,SACLC,GAAMxB,EAAAA,EAAAA,QAAO,MACbU,GAAOV,EAAAA,EAAAA,QAAO,CAChBc,MAAO,EACPF,OAAQ,EACRI,IAAK,EACLE,KAAM,IAiCV,OAtBAO,EAAAA,EAAAA,qBAAmB,WACf,MAAqCf,EAAKR,QAAlCY,EAAK,EAALA,MAAOF,EAAM,EAANA,OAAQI,EAAG,EAAHA,IAAKE,EAAI,EAAJA,KAC5B,IAAIT,GAAce,EAAItB,SAAYY,GAAUF,EAA5C,CAEAY,EAAItB,QAAQwB,QAAQC,YAAcvC,EAClC,IAAMwC,EAAQC,SAASC,cAAc,SAarC,OAZAD,SAASE,KAAKC,YAAYJ,GACtBA,EAAMK,OACNL,EAAMK,MAAMC,WAAW,oCAAD,OACD9C,EAAE,gFAEd0B,EAAK,+CACJF,EAAM,4CACTI,EAAG,6CACFE,EAAI,0CAIT,WACHW,SAASE,KAAKI,YAAYP,EAC9B,CAjBU,CAkBd,GAAG,CAACnB,IACIY,EAAAA,cAAoBlB,EAAiB,CAAEM,UAAWA,EAAWD,SAAUgB,EAAKb,QAASD,GAAQW,EAAAA,aAAmBD,EAAU,CAAEI,IAAAA,IACxI,CC9DA,IAAMY,EAAgB,SAAH,GAA+F,IAAzFhB,EAAQ,EAARA,SAAUrD,EAAO,EAAPA,QAAS0C,EAAS,EAATA,UAAW4B,EAAc,EAAdA,eAAgBC,EAAM,EAANA,OAAQC,EAAqB,EAArBA,sBAAuB1C,EAAI,EAAJA,KAC5F2C,GAAmBC,EAAAA,EAAAA,GAAYC,GAC/BtD,GAAKmC,EAAAA,EAAAA,SACLoB,GAAUC,EAAAA,EAAAA,UAAQ,iBAAO,CAC3BxD,GAAAA,EACArB,QAAAA,EACA0C,UAAAA,EACA6B,OAAAA,EACAD,eAAgB,SAACQ,GACbL,EAAiBM,IAAID,GAAS,GAAM,IACc,EADd,UACXL,EAAiBO,UAAQ,IAAlD,IAAK,EAAL,qBAAoD,CAChD,IADiB,QAEb,MACR,CAAC,+BACDV,GAAkBA,GACtB,EACAW,SAAU,SAACH,GAEP,OADAL,EAAiBM,IAAID,GAAS,GACvB,kBAAML,EAAiBS,OAAOJ,EAAQ,CACjD,EACH,GAMDN,OAAwBW,EAAY,CAACzC,IAiBrC,OAhBAmC,EAAAA,EAAAA,UAAQ,WACJJ,EAAiBW,SAAQ,SAACC,EAAGC,GAAG,OAAKb,EAAiBM,IAAIO,GAAK,EAAM,GACzE,GAAG,CAAC5C,IAKJY,EAAAA,WAAgB,YACXZ,IACI+B,EAAiB9B,MAClB2B,GACAA,GACR,GAAG,CAAC5B,IACS,cAATZ,IACAuB,EAAWC,EAAAA,cAAoBC,EAAU,CAAEb,UAAWA,GAAaW,IAE/DC,EAAAA,cAAoBiC,EAAAA,EAAAA,SAA0B,CAAEC,MAAOZ,GAAWvB,EAC9E,EACA,SAASsB,IACL,OAAO,IAAIc,GACf,C,cC3CA,IAAMC,EAAc,SAACC,GAAK,OAAKA,EAAML,KAAO,EAAE,EAiD9C,IAAMzD,EAAkB,SAAH,GAA4H,IAAtHwB,EAAQ,EAARA,SAAUkB,EAAM,EAANA,OAAM,IAAEvE,QAAAA,OAAO,IAAG,GAAI,EAAEsE,EAAc,EAAdA,eAAgBsB,EAAe,EAAfA,gBAAe,IAAEpB,sBAAAA,OAAqB,IAAG,GAAI,MAAE1C,KAAAA,OAAI,IAAG,SAAM,EAEjI8D,IACA9D,EAAO,QAOX,MCjEJ,WACI,IAAME,EAAYD,IAClB,GAAkDpB,EAAAA,EAAAA,UAAS,GAAE,eAAtDkF,EAAiB,KAAEC,EAAoB,KACxCC,GAAcC,EAAAA,EAAAA,cAAY,WAC5BhE,EAAUG,SAAW2D,EAAqBD,EAAoB,EAClE,GAAG,CAACA,IAMJ,MAAO,EADqBG,EAAAA,EAAAA,cAAY,kBAAMC,EAAAA,GAAAA,WAAgBF,EAAY,GAAE,CAACA,IAChDF,EACjC,CDqDwBK,GAAfH,GAA+B,YAApB,GACVI,GAAyBC,EAAAA,EAAAA,YAAWC,EAAAA,GAAoBN,YAC1DI,IACAJ,EAAcI,GAClB,IEvEsBG,EFuEhBtE,EAAYD,IAEZwE,EA1DV,SAAsBlD,GAClB,IAAMmD,EAAW,GAMjB,OAJAC,EAAAA,SAAAA,QAAiBpD,GAAU,SAACsC,IACpBe,EAAAA,EAAAA,gBAAef,IACfa,EAASG,KAAKhB,EACtB,IACOa,CACX,CAkD6BI,CAAavD,GAClCwD,EAAmBN,EACjBO,EAAU,IAAIC,IAGdC,GAAkB/E,EAAAA,EAAAA,QAAO4E,GAEzBI,GAAchF,EAAAA,EAAAA,QAAO,IAAIwD,KAAOtD,QAGhC+E,GAAkBjF,EAAAA,EAAAA,SAAO,GAW/B,IAVAC,EAAAA,EAAAA,IAA0B,WACtBgF,EAAgB/E,SAAU,EA5ElC,SAA2BkB,EAAU4D,GACjC5D,EAAS+B,SAAQ,SAACO,GACd,IAAML,EAAMI,EAAYC,GACxBsB,EAAYlC,IAAIO,EAAKK,EACzB,GACJ,CAwEQwB,CAAkBZ,EAAkBU,GACpCD,EAAgB7E,QAAU0E,CAC9B,IExFsBP,EFyFL,WACbY,EAAgB/E,SAAU,EAC1B8E,EAAYG,QACZN,EAAQM,OACZ,GE5FOjG,EAAAA,EAAAA,YAAU,kBAAM,kBAAMmF,GAAU,IAAE,IF6FrCY,EAAgB/E,QAChB,OAAQmB,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMuD,EAAiB/H,KAAI,SAAC6G,GAAK,OAAMrC,EAAAA,cAAoBe,EAAe,CAAEiB,IAAKI,EAAYC,GAAQjD,WAAW,EAAM1C,UAASA,QAAUmF,EAAmBX,sBAAuBA,EAAuB1C,KAAMA,GAAQ6D,EAAM,KAG9QkB,GAAmB,OAAIA,GAOvB,IAJA,IAAMQ,EAAcL,EAAgB7E,QAAQrD,IAAI4G,GAC1C4B,EAAaf,EAAiBzH,IAAI4G,GAElC6B,EAAaF,EAAYjG,OACtBoG,EAAI,EAAGA,EAAID,EAAYC,IAAK,CACjC,IAAMlC,EAAM+B,EAAYG,IACS,IAA7BF,EAAWG,QAAQnC,IACnBwB,EAAQY,IAAIpC,EAEpB,CA4CA,MAzCa,SAATxD,GAAmBgF,EAAQnE,OAC3BkE,EAAmB,IAIvBC,EAAQ1B,SAAQ,SAACE,GAEb,IAAiC,IAA7BgC,EAAWG,QAAQnC,GAAvB,CAEA,IAAMK,EAAQsB,EAAYU,IAAIrC,GAC9B,GAAKK,EAAL,CAEA,IAAMiC,EAAiBP,EAAYI,QAAQnC,GAgB3CuB,EAAiBgB,OAAOD,EAAgB,EAAGtE,EAAAA,cAAoBe,EAAe,CAAEiB,IAAKI,EAAYC,GAAQjD,WAAW,EAAO4B,eAf5G,WACX2C,EAAY/B,OAAOI,GACnBwB,EAAQ5B,OAAOI,GAEf,IAAMwC,EAAcd,EAAgB7E,QAAQ4F,WAAU,SAACC,GAAY,OAAKA,EAAa1C,MAAQA,CAAG,IAGhG,GAFA0B,EAAgB7E,QAAQ0F,OAAOC,EAAa,IAEvChB,EAAQnE,KAAM,CAEf,GADAqE,EAAgB7E,QAAUoE,GACA,IAAtBvE,EAAUG,QACV,OACJ4D,IACAzB,GAAkBA,GACtB,CACJ,EACmJC,OAAQA,EAAQC,sBAAuBA,EAAuB1C,KAAMA,GAAQ6D,GAjBrN,CAHA,CAqBd,IAGAkB,EAAmBA,EAAiB/H,KAAI,SAAC6G,GACrC,IAAML,EAAMK,EAAML,IAClB,OAAOwB,EAAQmB,IAAI3C,GAAQK,EAAUrC,EAAAA,cAAoBe,EAAe,CAAEiB,IAAKI,EAAYC,GAAQjD,WAAW,EAAM8B,sBAAuBA,EAAuB1C,KAAMA,GAAQ6D,EACpL,IAMQrC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMwD,EAAQnE,KACpDkE,EACAA,EAAiB/H,KAAI,SAAC6G,GAAK,OAAKuC,EAAAA,EAAAA,cAAavC,EAAM,IAC7D,C","sources":["components/SpeakerDetail.jsx","components/Modal.jsx","components/SpeakerContent.jsx","../node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../node_modules/framer-motion/dist/es/utils/use-force-update.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs"],"sourcesContent":["import React from \"react\";\r\n\r\nconst SpeakerDetail = ({ details }) => {\r\n  const {\r\n    speaker: { image, name, position, text, list },\r\n  } = details;\r\n  return (\r\n    <article className=\"flex flex-col gap-4 md:gap-10 w-full h-full md:grid md:grid-cols-[1fr_1fr] overflow-hidden\">\r\n      <div className=\"grid place-items-center\">\r\n        <img\r\n          src={image}\r\n          alt={name}\r\n          className=\"w-[50%] object-cover h-full rounded-md md:w-auto drop-shadow-2xl\"\r\n        />\r\n      </div>\r\n      <div className=\"flex flex-col items-center gap-3 md:gap-6\">\r\n        <div>\r\n          <h2 className=\"text-lg sm:text-xl md:text-2xl lg:text-4xl text-tedx-white/90 font-bold text-center\">\r\n            {name}\r\n          </h2>\r\n          <p className=\"text-base text-md md:text-lg lg:text-xl text-tedx-white/50 font-semibold text-center\">\r\n            {position}\r\n          </p>\r\n        </div>\r\n        {text?.map((para, index) => {\r\n          return (\r\n            <p\r\n              key={index}\r\n              className=\"text-xs sm:text-sm md:text-md py-1 lg:text-lg px-3\"\r\n            >\r\n              {para}\r\n            </p>\r\n          );\r\n        })}\r\n        <ul className=\"list-disc pl-4 md:pl-10 text-xs py-2 sm:text-sm md:text-md lg:text-lg\">\r\n          {list?.map((listItem, index) => {\r\n            return <li key={index}>{listItem}</li>;\r\n          })}\r\n        </ul>\r\n      </div>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default SpeakerDetail;\r\n","import React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faClose } from \"@fortawesome/free-solid-svg-icons\";\r\nimport SpeakerDetail from \"./SpeakerDetail\";\r\n\r\nconst dropInAnimate = {\r\n  hidden: {\r\n    y: \"-100vh\",\r\n    opacity: 0,\r\n  },\r\n  visible: {\r\n    y: \"0\",\r\n    opacity: 1,\r\n    transition: {\r\n      duration: 0.1,\r\n      type: \"spring\",\r\n      damping: 25,\r\n      stiffness: 500,\r\n    },\r\n  },\r\n  exit: {\r\n    y: \"100vh\",\r\n    opacity: 0,\r\n  },\r\n};\r\n\r\nconst Modal = ({ details, handleClose }) => {\r\n  return (\r\n    <motion.section\r\n      className=\"fixed top-0 left-0 h-screen z-[999] w-full grid place-items-center bg-tedx-dark/80 overflow-hidden\"\r\n      onClick={handleClose}\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      exit={{ opacity: 0 }}\r\n    >\r\n      <motion.article\r\n        className=\"bg-tedx-blue/60 w-[90%] relative h-[70%] sm:h-[80%] p-2 md:p-4 md:w-[80%] md:h-[70%] grid place-items-center rounded-lg\"\r\n        onClick={(e) => e.stopPropagation()}\r\n        variants={dropInAnimate}\r\n        initial=\"hidden\"\r\n        animate=\"visible\"\r\n        exit=\"exit\"\r\n      >\r\n        <SpeakerDetail details={details} />\r\n        <motion.button\r\n          whileHover={{ scale: 1.1 }}\r\n          whileTap={{ scale: 0.9 }}\r\n          onClick={handleClose}\r\n          className=\"absolute top-5 right-5\"\r\n        >\r\n          <FontAwesomeIcon className=\"h-8 w-8\" icon={faClose} />\r\n        </motion.button>\r\n      </motion.article>\r\n    </motion.section>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport Modal from \"./Modal\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst SpeakerContent = ({ speakers }) => {\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [isHeads, setIsHeads] = useState(false);\r\n  const [speakerDetails, setSpeakerDetails] = useState({});\r\n  const close = () => {\r\n    setModalOpen(false);\r\n  };\r\n  const open = () => {\r\n    setModalOpen(true);\r\n  };\r\n  useEffect(() => {\r\n    if (speakers?.length < 3) {\r\n      setIsHeads(true);\r\n    }\r\n  }, [speakers?.length]);\r\n  return (\r\n    <section className=\"relative\">\r\n      <header id=\"speakers\" className={` ${isHeads ? \"h-auto\" : \"\"}`}>\r\n        <h2\r\n          className={`text-center uppercase my-0 p-0 ${\r\n            isHeads\r\n              ? \"text-md md:text-lg\"\r\n              : \"text-xl md:text-2xl lg:text-3xl font-bold\"\r\n          }`}\r\n        >\r\n          {isHeads ? \"Heads\" : \"Speakers\"}\r\n        </h2>\r\n      </header>\r\n      <article\r\n        className={`flex flex-wrap md:px-24 lg-px-32 justify-center gap-3 items-center py-10`}\r\n      >\r\n        {speakers?.map((speaker) => {\r\n          const { name, image, position, social } = speaker;\r\n          return (\r\n            <motion.section\r\n              whileHover={{ scale: 1.02 }}\r\n              onTap={{ scale: 0.98 }}\r\n              key={name}\r\n              className={`group flex flex-col justify-center items-center clip md:clip-path-speakerPolygon cursor-pointer bg-tedx-blue/30 bg-clip-border gap-y-2 ${\r\n                isHeads ? \"px-12 py-2\" : \"p-2\"\r\n              } transition-opacity duration-200 hover:opacity-100 opacity-100 md:opacity-80 border-transparent border-b-2 hover:border-tedx-white rounded-md md:w-[40vh] w-[25vh] h-[25vh] min-w-[300px] min-h-[300px]  md:h-[40vh] overflow-hidden`}\r\n              onClick={(event) => {\r\n                event.stopPropagation();\r\n                modalOpen ? close() : open();\r\n                setSpeakerDetails({ speaker });\r\n              }}\r\n            >\r\n              <img\r\n                loading=\"lazy\"\r\n                src={image}\r\n                alt={name}\r\n                className={`h-full max-h-[220px] w-full md:w-[150px] object-contain md:h-[150px] lg:h-[200px] lg:w-[200px] ease-in-out ${\r\n                  isHeads ? \"rounded-full\" : \"rounded-none\"\r\n                }`}\r\n              />\r\n              <h3 className=\"transition-transform text-center text-sm md:text-lg font-semibold duration-200 translate-y-2 group-hover:translate-y-0\">\r\n                {name}\r\n              </h3>\r\n              {isHeads ? (\r\n                <motion.a\r\n                  href={social[1]}\r\n                  className={`relative w-full flex justify-center items-center rounded-full`}\r\n                  rel=\"noreferrer\"\r\n                  target={\"_blank\"}\r\n                  whileHover={{ scale: 1.02 }}\r\n                >\r\n                  <FontAwesomeIcon\r\n                    className=\"md:w-4 md:h-4 w-3 h-3 lg:w-5 lg:h-5 duration-200\"\r\n                    icon={social[0]}\r\n                  />\r\n                </motion.a>\r\n              ) : null}\r\n              <h4\r\n                className={`visible md:invisible group-hover:visible text-xs sm:text-sm md:text-lg text-center w-[90%] md:w-[${\r\n                  isHeads ? \"80%\" : \"60%\"\r\n                }]`}\r\n              >\r\n                {position}\r\n              </h4>\r\n            </motion.section>\r\n          );\r\n        })}\r\n      </article>\r\n      <footer>\r\n        {isHeads ? null : (\r\n          <AnimatePresence initial={false} mode=\"wait\">\r\n            {modalOpen && (\r\n              <Modal details={speakerDetails} handleClose={close} />\r\n            )}\r\n          </AnimatePresence>\r\n        )}\r\n      </footer>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default SpeakerContent;\r\n","import { useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-effect.mjs';\n\nfunction useIsMounted() {\n    const isMounted = useRef(false);\n    useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n    return isMounted;\n}\n\nexport { useIsMounted };\n","import * as React from 'react';\nimport { useId, useRef, useInsertionEffect } from 'react';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (React.createElement(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size }, React.cloneElement(children, { ref })));\n}\n\nexport { PopChild };\n","import * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: (childId) => {\n            presenceChildren.set(childId, true);\n            for (const isComplete of presenceChildren.values()) {\n                if (!isComplete)\n                    return; // can stop searching when any is incomplete\n            }\n            onExitComplete && onExitComplete();\n        },\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = React.createElement(PopChild, { isPresent: isPresent }, children);\n    }\n    return (React.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import * as React from 'react';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { useIsMounted } from '../../utils/use-is-mounted.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction updateChildLookup(children, allChildren) {\n    children.forEach((child) => {\n        const key = getChildKey(child);\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, exitBeforeEnter, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    // Support deprecated exitBeforeEnter prop\n    if (exitBeforeEnter) {\n        mode = \"wait\";\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"Replace exitBeforeEnter with mode='wait'\");\n        }\n    }\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    let [forceRender] = useForceUpdate();\n    const forceRenderLayoutGroup = useContext(LayoutGroupContext).forceRender;\n    if (forceRenderLayoutGroup)\n        forceRender = forceRenderLayoutGroup;\n    const isMounted = useIsMounted();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    const filteredChildren = onlyElements(children);\n    let childrenToRender = filteredChildren;\n    const exiting = new Set();\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    const presentChildren = useRef(childrenToRender);\n    // A lookup table to quickly reference components by key\n    const allChildren = useRef(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    const isInitialRender = useRef(true);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        updateChildLookup(filteredChildren, allChildren);\n        presentChildren.current = childrenToRender;\n    });\n    useUnmountEffect(() => {\n        isInitialRender.current = true;\n        allChildren.clear();\n        exiting.clear();\n    });\n    if (isInitialRender.current) {\n        return (React.createElement(React.Fragment, null, childrenToRender.map((child) => (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child)))));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = [...childrenToRender];\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    const presentKeys = presentChildren.current.map(getChildKey);\n    const targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    const numPresent = presentKeys.length;\n    for (let i = 0; i < numPresent; i++) {\n        const key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1) {\n            exiting.add(key);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (mode === \"wait\" && exiting.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exiting.forEach((key) => {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        const child = allChildren.get(key);\n        if (!child)\n            return;\n        const insertionIndex = presentKeys.indexOf(key);\n        const onExit = () => {\n            allChildren.delete(key);\n            exiting.delete(key);\n            // Remove this child from the present children\n            const removeIndex = presentChildren.current.findIndex((presentChild) => presentChild.key === key);\n            presentChildren.current.splice(removeIndex, 1);\n            // Defer re-rendering until all exiting children have indeed left\n            if (!exiting.size) {\n                presentChildren.current = filteredChildren;\n                if (isMounted.current === false)\n                    return;\n                forceRender();\n                onExitComplete && onExitComplete();\n            }\n        };\n        childrenToRender.splice(insertionIndex, 0, React.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map((child) => {\n        const key = child.key;\n        return exiting.has(key) ? (child) : (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        childrenToRender.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    return (React.createElement(React.Fragment, null, exiting.size\n        ? childrenToRender\n        : childrenToRender.map((child) => cloneElement(child))));\n};\n\nexport { AnimatePresence };\n","import { sync } from '../frameloop/index.mjs';\nimport { useState, useCallback } from 'react';\nimport { useIsMounted } from './use-is-mounted.mjs';\n\nfunction useForceUpdate() {\n    const isMounted = useIsMounted();\n    const [forcedRenderCount, setForcedRenderCount] = useState(0);\n    const forceRender = useCallback(() => {\n        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    const deferredForceRender = useCallback(() => sync.postRender(forceRender), [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n"],"names":["details","speaker","image","name","position","text","list","className","src","alt","map","para","index","listItem","dropInAnimate","hidden","y","opacity","visible","transition","duration","type","damping","stiffness","exit","handleClose","motion","onClick","initial","animate","e","stopPropagation","variants","whileHover","scale","whileTap","icon","faClose","speakers","useState","modalOpen","setModalOpen","isHeads","setIsHeads","speakerDetails","setSpeakerDetails","close","useEffect","length","id","social","onTap","event","loading","href","rel","target","AnimatePresence","mode","useIsMounted","isMounted","useRef","useIsomorphicLayoutEffect","current","PopChildMeasure","prevProps","element","this","props","childRef","isPresent","size","sizeRef","height","offsetHeight","width","offsetWidth","top","offsetTop","left","offsetLeft","children","React","PopChild","useId","ref","useInsertionEffect","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","removeChild","PresenceChild","onExitComplete","custom","presenceAffectsLayout","presenceChildren","useConstant","newChildrenMap","context","useMemo","childId","set","values","register","delete","undefined","forEach","_","key","PresenceContext","value","Map","getChildKey","child","exitBeforeEnter","forcedRenderCount","setForcedRenderCount","forceRender","useCallback","sync","useForceUpdate","forceRenderLayoutGroup","useContext","LayoutGroupContext","callback","filteredChildren","filtered","Children","isValidElement","push","onlyElements","childrenToRender","exiting","Set","presentChildren","allChildren","isInitialRender","updateChildLookup","clear","presentKeys","targetKeys","numPresent","i","indexOf","add","get","insertionIndex","splice","removeIndex","findIndex","presentChild","has","cloneElement"],"sourceRoot":""}